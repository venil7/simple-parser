{"version":3,"sources":["src/peekable.ts","src/charStream.ts","src/operator.ts","src/tokenStream.ts","src/parser.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAA,QAAA;AAAA;AAAA,YAAA;AAEE,WAAA,QAAA,CAAoB,QAApB,EAAiD;AAA7B,SAAA,QAAA,GAAA,QAAA;AAAiC;;AAE9C,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,QAAI,KAAK,IAAT,EAAe,OAAO,KAAK,IAAZ;AACf,SAAK,IAAL,GAAY,KAAK,QAAL,CAAc,IAAd,EAAZ;AACA,WAAO,KAAK,IAAZ;AACD,GAJM;;AAMA,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAP,YAAA;AACE,QAAM,IAAI,GAAG,KAAK,IAAL,EAAb;AACA,WAAO,IAAI,IAAI,IAAI,CAAC,IAApB;AACD,GAHM;;AAKA,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,QAAI,KAAK,IAAT,EAAe;AACb,UAAM,IAAI,GAAG,KAAK,IAAlB;AACA,WAAK,IAAL,GAAY,IAAZ;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAK,QAAL,CAAc,IAAd,EAAP;AACD,GAPM;;AAQA,EAAA,QAAA,CAAA,SAAA,CAAC,MAAM,CAAC,QAAR,IAAP,YAAA;AACE,WAAO,IAAP;AACD,GAFM;;AAGT,SAAA,QAAA;AA1BA,CAAA,EAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,IAAA,UAAA;AAAA;AAAA,YAAA;AAIE,WAAA,UAAA,CAAoB,KAApB,EAAiC;AAAb,SAAA,KAAA,GAAA,KAAA;AAHZ,SAAA,GAAA,GAAc,CAAd;AACA,SAAA,GAAA,GAAc,CAAd;AACA,SAAA,IAAA,GAAe,CAAf;AAC6B;;AAC7B,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAR,YAAA;;;;;;kBACiB,EAAA,GAAA,KAAK;;;;gBAAL,EAAA,GAAA,EAAA,CAAA,SAAU,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AAAhB,UAAA,EAAE,GAAA,EAAA,CAAA,EAAA,CAAF;;AACP,cAAI,EAAE,KAAK,IAAX,EAAiB;AACf,iBAAK,GAAL,GAAW,CAAX;AACA,iBAAK,IAAL,IAAa,CAAb;AACD,WAHD,MAGO;AACL,iBAAK,GAAL,IAAY,CAAZ;AACD;;AACD,eAAK,GAAL,IAAY,CAAZ;AACA,iBAAA,CAAA;AAAA;AAAA,YAAM,EAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;AARa,UAAA,EAAA;;;;;;;;;;;AAUhB,GAXO;;AAYD,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACE,WAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,GAAvB,CAAP;AACD,GAFM;;AAGP,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,CAAN,EAAe;AACb,UAAM,KAAK,CAAC,YAAU,CAAV,GAAW,YAAX,GAAwB,KAAK,IAA7B,GAAiC,QAAjC,GAA0C,KAAK,GAAhD,CAAX;AACD,GAFD;;AAGF,SAAA,UAAA;AAvBA,CAAA,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;;;;;ACAb,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAClB,EAAA,QAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,IAAA;AACA,EAAA,QAAA,CAAA,MAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,IAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AACA,EAAA,QAAA,CAAA,IAAA,CAAA,GAAA,GAAA;AACA,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,IAAA;AACD,CAZD,EAAY,QAAQ,GAAR,OAAA,CAAA,QAAA,KAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAZ;;AAca,OAAA,CAAA,SAAA,GAAY,CACvB,QAAQ,CAAC,EADc,EAEvB,QAAQ,CAAC,KAFc,EAGvB,QAAQ,CAAC,IAHc,EAIvB,QAAQ,CAAC,KAJc,EAKvB,QAAQ,CAAC,GALc,EAMvB,QAAQ,CAAC,GANc,EAOvB,QAAQ,CAAC,KAPc,EAQvB,QAAQ,CAAC,EARc,EASvB,QAAQ,CAAC,GATc,EAUvB,QAAQ,CAAC,EAVc,EAWvB,QAAQ,CAAC,GAXc,EAYvB,GAZuB,CAYnB,UAAA,CAAA,EAAC;AAAI,SAAA,CAAC,CAAC,QAAF,EAAA;AAAY,CAZE,CAAZ;AAcA,OAAA,CAAA,GAAA,GAAM,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAQ,OAAA,CAAA,SAAA,CAAU,IAAV,CAAe,EAAf,EAAmB,KAAnB,CAAyB,EAAzB,CAAR,CAAX,CAAN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Bb,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAEA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;AACnB,EAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,QAAA;AACA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,SAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACD,CAPD,EAAY,SAAS,GAAT,OAAA,CAAA,SAAA,KAAA,OAAA,CAAA,SAAA,GAAS,EAAT,CAAZ;;AASA,IAAM,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAnB;AACA,IAAM,QAAQ,GAAG,6BAA6B,KAA7B,CAAmC,EAAnC,CAAjB;AACA,IAAM,MAAM,GAAG,aAAa,KAAb,CAAmB,EAAnB,CAAf;AACA,IAAM,QAAQ,GAAO,QAAQ,CAAA,MAAR,CAAQ,CAAE,GAAF,CAAR,CAArB;AACA,IAAM,UAAU,GAAO,QAAQ,CAAA,MAAR,CAAa,MAAb,CAAvB;AACA,IAAM,KAAK,GAAG,YAAY,KAAZ,CAAkB,EAAlB,CAAd;AACA,IAAM,OAAO,GAAG,CAAC,GAAD,CAAhB;AACA,IAAM,QAAQ,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,QAAvB,EAAiC,MAAjC,EAAyC,OAAzC,CAAjB;;AAIA,IAAM,QAAQ,GAAG,SAAX,QAAW,GAAA;AAAC,MAAA,KAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAkB;AAAlB,IAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAuB,SAAA,UAAC,CAAD,EAAU;AAAK,WAAA,KAAK,CAAC,OAAN,CAAc,CAAd,KAAoB,CAApB;AAAqB,GAApC;AAAoC,CAA7E;;AACA,IAAM,QAAQ,GAAG,SAAX,QAAW,GAAA;AAAC,MAAA,KAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAkB;AAAlB,IAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAuB,SAAA,UAAC,CAAD,EAAU;AAAK,WAAA,CAAC,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,KAAZ,EAAmB,CAAnB,CAAD;AAAsB,GAArC;AAAqC,CAA9E;;AACA,IAAM,aAAa,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,KAAZ,CAAtB;AACA,IAAM,YAAY,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,UAAZ,CAArB;AACA,IAAM,YAAY,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,UAAZ,CAArB;AACA,IAAM,UAAU,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,QAAZ,CAAnB;AACA,IAAM,UAAU,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,QAAZ,CAAnB;AACA,IAAM,QAAQ,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,MAAZ,CAAjB;AACA,IAAM,UAAU,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,UAAA,CAAA,GAAZ,CAAnB;AACA,IAAM,QAAQ,GAAG,QAAQ,CAAC,GAAD,CAAzB;AACA,IAAM,gBAAgB,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,UAAA,CAAA,SAAZ,CAAzB;AACA,IAAM,OAAO,GAAG,QAAQ,CAAC,GAAD,CAAxB;AACA,IAAM,SAAS,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,OAAZ,CAAlB;AACA,IAAM,QAAQ,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,QAAZ,CAAjB;;AAEA,IAAA,WAAA;AAAA;AAAA,YAAA;AAIE,WAAA,WAAA,CAAoB,KAApB,EAAiC;AAAjC,QAAA,KAAA,GAAA,IAAA;;AAAoB,SAAA,KAAA,GAAA,KAAA;;AAmDb,SAAA,KAAA,GAAQ,UAAC,CAAD,EAAU;AAAK,aAAA,KAAI,CAAC,UAAL,CAAgB,KAAhB,CAAsB,CAAtB,CAAA;AAAwB,KAA/C;;AAlDL,SAAK,UAAL,GAAkB,IAAI,YAAA,CAAA,UAAJ,CAAe,KAAf,CAAlB;AACA,SAAK,YAAL,GAAoB,KAAK,UAAL,CAAgB,MAAhB,EAApB;AACD;;AACO,EAAA,WAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AAAkB,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAkB;AAAlB,MAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAChB,QAAM,IAAI,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,KAAZ,CAAb;AACA,QAAI,GAAG,GAAG,EAAV;;AACA,WAAO,IAAI,CAAC,KAAK,UAAL,CAAgB,IAAhB,EAAD,CAAX,EAAqC;AACnC,MAAA,GAAG,IAAI,KAAK,YAAL,CAAkB,IAAlB,GAAyB,KAAhC;AACD;;AACD,WAAO,GAAP;AACD,GAPO;;AAQA,EAAA,WAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AAAkB,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAkB;AAAlB,MAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAChB,QAAM,KAAK,GAAG,QAAQ,CAAA,KAAR,CAAQ,KAAA,CAAR,EAAY,KAAZ,CAAd;AACA,QAAI,GAAG,GAAG,EAAV;;AACA,WAAO,KAAK,CAAC,KAAK,UAAL,CAAgB,IAAhB,EAAD,CAAZ,EAAsC;AACpC,MAAA,GAAG,IAAI,KAAK,YAAL,CAAkB,IAAlB,GAAyB,KAAhC;AACD;;AACD,WAAO,GAAP;AACD,GAPO;;AAQA,EAAA,WAAA,CAAA,SAAA,CAAA,cAAA,GAAR,YAAA;AACE,SAAK,SAAL,CAAc,KAAd,CAAA,IAAA,EAAkB,UAAlB;AACD,GAFO;;AAGA,EAAA,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,YAAA;AACE,SAAK,SAAL,CAAe,IAAf;AACD,GAFO;;AAGA,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAR,YAAA;AACE,SAAK,YAAL,CAAkB,IAAlB,GADF,CAC4B;;AAC1B,QAAM,GAAG,GAAG,KAAK,SAAL,CAAe,GAAf,EAAoB,IAApB,CAAZ;AACA,QAAM,CAAC,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAV,CAHF,CAGsC;;AACpC,QAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAH,CAAZ,EAAuB,KAAK,KAAL,CAAW,qBAAX;AACvB,WAAO,GAAG,CAAC,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAP;AACD,GANO;;AAOA,EAAA,WAAA,CAAA,SAAA,CAAA,cAAA,GAAR,YAAA;AACE,QAAM,EAAE,GAAG,KAAK,SAAL,CAAc,KAAd,CAAA,IAAA,EAAkB,UAAA,CAAA,GAAlB,CAAX;;AACA,QAAI,CAAC,gBAAgB,CAAC,EAAD,CAAjB,IAAyB,CAAC,QAAQ,CAAC,EAAD,CAAtC,EAA4C;AAC1C,WAAK,KAAL,CAAW,sBAAoB,EAA/B;AACD;;AACD,WAAO,EAAP;AACD,GANO;;AAOA,EAAA,WAAA,CAAA,SAAA,CAAA,gBAAA,GAAR,YAAA;AACE,WAAO,KAAK,SAAL,CAAc,KAAd,CAAA,IAAA,EAAkB,UAAlB,CAAP;AACD,GAFO;;AAGA,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAR,YAAA;AACE,QAAM,GAAG,GAAG,KAAK,SAAL,CAAc,KAAd,CAAA,IAAA,EAAkB,MAAlB,CAAZ;AACA,QAAM,IAAI,GAAG,KAAK,UAAL,CAAgB,IAAhB,EAAb;;AACA,QAAI,UAAU,CAAC,IAAD,CAAd,EAAsB;AACpB,WAAK,KAAL,CAAW,mBAAiB,GAAjB,GAAuB,IAAvB,GAA2B,IAAtC;AACD;;AACD,WAAO,MAAM,CAAC,GAAD,CAAb;AACD,GAPO;;AASA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAR,YAAA;;;;;gBAEU,IAAI,GAAG,KAAK,UAAL,CAAgB,IAAhB,KAAuB,OAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;eAChC,SAAS,CAAC,IAAD,GAAT,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACF,eAAK,iBAAL;;;;;;eACS,YAAY,CAAC,IAAD,GAAZ,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACT,eAAK,cAAL;;;;;;eACS,aAAa,CAAC,IAAD,GAAb,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACT,iBAAA,CAAA;AAAA;AAAA,YAAM;AAAE,YAAA,IAAI,EAAE,SAAS,CAAC,IAAlB;AAAwB,YAAA,KAAK,EAAE,KAAK,YAAL,CAAkB,IAAlB,GAAyB;AAAxD,WAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;eACS,QAAQ,CAAC,IAAD,GAAR,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACT,iBAAA,CAAA;AAAA;AAAA,YAAM;AAAE,YAAA,IAAI,EAAE,SAAS,CAAC,GAAlB;AAAuB,YAAA,KAAK,EAAE,KAAK,YAAL;AAA9B,WAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;eACS,OAAO,CAAC,IAAD,GAAP,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACT,iBAAA,CAAA;AAAA;AAAA,YAAM;AAAE,YAAA,IAAI,EAAE,SAAS,CAAC,GAAlB;AAAuB,YAAA,KAAK,EAAE,KAAK,YAAL;AAA9B,WAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;eACS,UAAU,CAAC,IAAD,GAAV,OAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;AACT,iBAAA,CAAA;AAAA;AAAA,YAAM;AAAE,YAAA,IAAI,EAAE,SAAS,CAAC,EAAlB;AAAsB,YAAA,KAAK,EAAE,KAAK,cAAL;AAA7B,WAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;eACS,UAAU,CAAC,IAAD,GAAV,OAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;AACH,UAAA,UAAU,GAAG,KAAK,gBAAL,EAAb;eACF,QAAQ,CAAC,UAAD,GAAR,OAAA,CAAA;AAAA;AAAA,YAAA,EAAA,CAAA;AACF,iBAAA,CAAA;AAAA;AAAA,YAAM;AAAE,YAAA,IAAI,EAAE,SAAS,CAAC,EAAlB;AAAsB,YAAA,KAAK,EAAE;AAA7B,WAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;AAEA,iBAAA,CAAA;AAAA;AAAA,YAAM;AAAE,YAAA,IAAI,EAAE,SAAS,CAAC,GAAlB;AAAuB,YAAA,KAAK,EAAE;AAA9B,WAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;;;;AAGF,eAAK,KAAL,CAAW,mBAAiB,IAA5B;;;;;;;;;;;;;;AAGL,GA1BO;;AA2BV,SAAA,WAAA;AAnFA,CAAA,EAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA;;;;;;ACrCb,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAK,OAAL;;AAAA,CAAA,UAAK,OAAL,EAAY;AACV,EAAA,OAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,OAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,OAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,OAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,OAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,OAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,OAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAXD,EAAK,OAAO,KAAP,OAAO,GAAA,EAAA,CAAZ;;AA+CA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,SAAD,EAAqB;AAAK,SAAA,UAAC,KAAD,EAAa;AACzD,WAAA,SAAS,KAAK,KAAK,CAAC,IAApB;AAAwB,GADoB;AACpB,CAD1B;;AAEA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD,EAAsB;AAAK,SAAA,UAAC,KAAD,EAAa;AACzD,WAAA,KAAK,KAAK,KAAK,CAAC,KAAhB;AAAqB,GADuB;AACvB,CADvB;;AAEA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,SAAD,EAAqB;AAAK,SAAA,UAAC,KAAD,EAAsB;AAAK,WAAA,UACnE,KADmE,EACvD;AACT,aAAA,WAAW,CAAC,SAAD,CAAX,CAAuB,KAAvB,KAAiC,UAAU,CAAC,KAAD,CAAV,CAAkB,KAAlB,CAAjC;AAAyD,KAFO;AAEP,GAFpB;AAEoB,CAF9D;;AAGA,IAAM,IAAI,GAAG,WAAW,CAAC,aAAA,CAAA,SAAA,CAAU,EAAX,CAAxB;AACA,IAAM,MAAM,GAAG,WAAW,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAA1B;AACA,IAAM,SAAS,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAAP,CAAwB,GAAxB,CAAlB;AACA,IAAM,WAAW,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAAP,CAAwB,GAAxB,CAApB;AACA,IAAM,YAAY,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAAP,CAAwB,GAAxB,CAArB;AACA,IAAM,WAAW,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAAP,CAAwB,GAAxB,CAApB;AACA,IAAM,YAAY,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAAP,CAAwB,GAAxB,CAArB;AACA,IAAM,KAAK,GAAG,WAAW,CAAC,aAAA,CAAA,SAAA,CAAU,GAAX,CAAzB;AACA,IAAM,QAAQ,GAAG,WAAW,CAAC,aAAA,CAAA,SAAA,CAAU,GAAX,CAA5B;AACA,IAAM,KAAK,GAAG,WAAW,CAAC,aAAA,CAAA,SAAA,CAAU,GAAX,CAAzB;AACA,IAAM,IAAI,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,EAAX,CAAP,CAAsB,IAAtB,CAAb;AACA,IAAM,QAAQ,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,EAAX,CAAP,CAAsB,QAAtB,CAAjB;AACA,IAAM,MAAM,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,EAAX,CAAP,CAAsB,MAAtB,CAAf;AACA,IAAM,OAAO,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,EAAX,CAAP,CAAsB,OAAtB,CAAhB;AACa,OAAA,CAAA,QAAA,GAAW,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,EAAX,CAAP,CAAsB,GAAtB,CAAX;;AAEb,IAAA,MAAA;AAAA;AAAA,YAAA;AAGE,WAAA,MAAA,CAAY,KAAZ,EAAyB;AAAzB,QAAA,KAAA,GAAA,IAAA;;AAKQ,SAAA,QAAA,GAAW,UAAC,KAAD,EAAc;AAAa,aAAC;AAAE,QAAA,IAAI,EAAE,OAAO,CAAC,GAAhB;AAAqB,QAAA,KAAK,EAAA;AAA1B,OAAD;AAA8B,KAApE;;AACA,SAAA,QAAA,GAAW,UAAC,KAAD,EAAc;AAAa,aAAC;AAAE,QAAA,IAAI,EAAE,OAAO,CAAC,GAAhB;AAAqB,QAAA,KAAK,EAAA;AAA1B,OAAD;AAA8B,KAApE;;AACA,SAAA,QAAA,GAAW,UAAC,KAAD,EAAc;AAAa,aAAC;AAAE,QAAA,IAAI,EAAE,OAAO,CAAC,GAAhB;AAAqB,QAAA,KAAK,EAAA;AAA1B,OAAD;AAA8B,KAApE;;AACA,SAAA,SAAA,GAAY,UAAC,KAAD,EAAe;AAAc,aAAC;AAChD,QAAA,IAAI,EAAE,OAAO,CAAC,IADkC;AAEhD,QAAA,KAAK,EAAA;AAF2C,OAAD;AAG/C,KAHM;;AAKA,SAAA,YAAA,GAAe,YAAA;AACrB,UAAM,IAAI,GAAG,KAAI,CAAC,IAAL,EAAb;;AACA,UAAI,KAAK,CAAC,IAAD,CAAT,EAAiB;AACf,YAAM,GAAG,GAAG,KAAI,CAAC,IAAL,GAAY,KAAxB;;AACA,eAAO,KAAI,CAAC,QAAL,CAAc,GAAd,CAAP;AACD;;AACD,MAAA,KAAI,CAAC,KAAL,CAAc,IAAI,CAAC,KAAL,GAAU,yBAAxB;AACD,KAPO;;AA0JA,SAAA,MAAA,GAAS,UAAC,GAAD,EAAY;AAAK,aAAA,KAAI,CAAC,SAAL,CAAe,aAAA,CAAA,SAAA,CAAU,EAAzB,EAA6B,GAA7B,CAAA;AAAiC,KAA3D;;AACA,SAAA,MAAA,GAAS,YAAA;AAAM,aAAA,KAAI,CAAC,MAAL,CAAY,IAAZ,CAAA;AAAiB,KAAhC;;AACA,SAAA,UAAA,GAAa,YAAA;AAAM,aAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAA;AAAqB,KAAxC;;AACA,SAAA,QAAA,GAAW,YAAA;AAAM,aAAA,KAAI,CAAC,MAAL,CAAY,MAAZ,CAAA;AAAmB,KAApC;;AACA,SAAA,QAAA,GAAW,YAAA;AAAM,aAAA,KAAI,CAAC,MAAL,CAAY,MAAZ,CAAA;AAAmB,KAApC;;AACA,SAAA,QAAA,GAAW,UAAC,GAAD,EAAY;AAAK,aAAA,KAAI,CAAC,SAAL,CAAe,aAAA,CAAA,SAAA,CAAU,IAAzB,EAA+B,GAA/B,CAAA;AAAmC,KAA/D;;AACA,SAAA,WAAA,GAAc,YAAA;AAAM,aAAA,KAAI,CAAC,QAAL,CAAc,GAAd,CAAA;AAAkB,KAAtC;;AACA,SAAA,OAAA,GAAU,YAAA;AAAM,aAAA,KAAI,CAAC,QAAL,CAAc,GAAd,CAAA;AAAkB,KAAlC;;AACA,SAAA,GAAA,GAAM,YAAA;AAAe,aAAA,KAAI,CAAC,WAAL,CAAiB,GAAjB,EAAA;AAAsB,KAA3C;;AACA,SAAA,IAAA,GAAO,YAAA;AAAa,aAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,GAAwB,KAAxB;AAA6B,KAAjD;;AACA,SAAA,IAAA,GAAO,YAAA;AAAa,aAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,GAAwB,KAAxB;AAA6B,KAAjD;;AACA,SAAA,KAAA,GAAQ,UAAC,CAAD,EAAU;AACxB,aAAA,KAAI,CAAC,cAAL,CAAoB,KAApB,CAA6B,CAAC,GAAA,YAAD,GAAa,KAAI,CAAC,IAAL,GAAY,KAAzB,GAA8B,IAA3D,CAAA;AAA+D,KADzD;;AAjLN,SAAK,cAAL,GAAsB,IAAI,aAAA,CAAA,WAAJ,CAAgB,KAAhB,CAAtB;AACA,SAAK,WAAL,GAAmB,IAAI,UAAA,CAAA,QAAJ,CAAoB,KAAK,cAAL,CAAoB,MAApB,EAApB,CAAnB;AACD;;AAmBO,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,IAAI,GAAG,KAAK,IAAL,EAAb;AACA,QAAI,IAAI,CAAC,IAAD,CAAR,EAAgB,OAAO,KAAK,OAAL,EAAP,CAFlB,CAGE;;AACA,QAAI,WAAW,CAAC,IAAD,CAAf,EAAuB,OAAO,KAAK,SAAL,EAAP;AACvB,QAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB,OAAO,KAAK,WAAL,EAAP;AACpB,QAAM,IAAI,GAAG,KAAK,IAAL,EAAb;AACA,QAAI,KAAK,CAAC,IAAD,CAAT,EACE,OAAO,KAAK,SAAL,CAAe,YAAA;AAAM,aAAA,KAAI,CAAC,QAAL,CAAc,IAAI,CAAC,KAAnB,CAAA;AAAmC,KAAxD,CAAP;AACF,QAAI,OAAO,CAAC,IAAD,CAAX,EAAmB,OAAO,KAAK,SAAL,CAAe,KAAf,CAAP;AACnB,QAAI,MAAM,CAAC,IAAD,CAAV,EAAkB,OAAO,KAAK,SAAL,CAAe,IAAf,CAAP;AAClB,QAAI,QAAQ,CAAC,IAAD,CAAZ,EAAoB,OAAO,KAAK,QAAL,CAAc,IAAI,CAAC,KAAnB,CAAP;AACpB,QAAI,KAAK,CAAC,IAAD,CAAT,EAAiB,OAAO,KAAK,QAAL,CAAc,IAAI,CAAC,KAAnB,CAAP;AACjB,SAAK,KAAL,CAAW,wBAAqB,IAAI,CAAC,KAA1B,GAA+B,IAA1C;AACD,GAdO;;AAgBA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,YAAA;AAAM,aAAA,KAAI,CAAC,eAAL,EAAA;AAAsB,KAA1D,CAAb;;AACA,QAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAO,IAAI,CAAC,CAAD,CAAX;AACD;;AACD,WAAO;AACL,MAAA,IAAI,EAAE,OAAO,CAAC,IADT;AAEL,MAAA,IAAI,EAAA;AAFC,KAAP;AAID,GATO;;AAWA,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,UAAL;AACA,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,YAAA;AACzC,aAAA,KAAI,CAAC,YAAL,EAAA;AAAmB,KADR,CAAb;AAGA,SAAK,OAAL;AACA,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,YAAA;AAAM,aAAA,KAAI,CAAC,eAAL,EAAA;AAAsB,KAA1D,CAAb;AACA,WAAO;AACL,MAAA,IAAI,EAAE,OAAO,CAAC,MADT;AAEL,MAAA,IAAI,EAAA,IAFC;AAGL,MAAA,IAAI,EAAA;AAHC,KAAP;AAKD,GAZO;;AAcA,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA,GAAR,YAAA;AACE,SAAK,MAAL;AACA,QAAM,IAAI,GAAG,KAAK,eAAL,EAAb;AACA,SAAK,QAAL;;AACA,QAAM,KAAK,GAAG,KAAK,SAAL,EAAd;;AACA,SAAK,QAAL;;AACA,QAAM,KAAK,GAAG,KAAK,SAAL,EAAd;;AACA,WAAO;AACL,MAAA,IAAI,EAAE,OAAO,CAAC,EADT;AAEL,MAAA,IAAI,EAAA,IAFC;AAGL,MAAA,IAAI,EAAE,KAHD;AAIL,cAAM;AAJD,KAAP;AAMD,GAbO;;AAeA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,IAAlB,EAA2B;AAA3B,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO;AACL,MAAA,IAAI,EAAE,OAAO,CAAC,IADT;AAEL,MAAA,IAAI,EAAA,IAFC;AAGL,MAAA,IAAI,EAAE,KAAK,SAAL,CAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,YAAA;AAAM,eAAA,KAAI,CAAC,eAAL,EAAA;AAAsB,OAA1D;AAHD,KAAP;AAKD,GANO;;AAQA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,IAAlB,EAAkC;AAChC,QAAM,IAAI,GAAG,IAAI,EAAjB;AACA,QAAM,IAAI,GAAG,KAAK,IAAL,EAAb;;AACA,QAAI,CAAC,KAAK,GAAL,EAAD,IAAe,WAAW,CAAC,IAAD,CAA9B,EAAsC;AACpC,aAAO,KAAK,SAAL,CAAe,IAAf,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAPO;;AASD,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,IAAnB,EAA4B;AAC1B,QAAM,IAAI,GAAG,KAAK,IAAL,EAAb;;AACA,QAAI,CAAC,KAAK,GAAL,EAAD,IAAe,IAAI,CAAC,IAAD,CAAvB,EAA+B;AAC7B,UAAM,EAAE,GAAG,KAAK,IAAL,EAAX;AACA,UAAM,MAAM,GAAG,OAAA,CAAA,QAAA,CAAS,EAAT,CAAf;AACA,UAAM,KAAK,GAAG,KAAK,WAAL,CAAiB,KAAK,SAAL,EAAjB,CAAd;AACA,aAAO,MAAM,GACR;AACC,QAAA,IAAI,EAAE,OAAO,CAAC,MADf;AAEC,QAAA,EAAE,EAAE,GAFL;AAGC,QAAA,IAAI,EAAA,IAHL;AAIC,QAAA,KAAK,EAAA;AAJN,OADQ,GAOR;AACC,QAAA,IAAI,EAAE,OAAO,CAAC,MADf;AAEC,QAAA,EAAE,EAAE,EAAE,CAAC,KAFR;AAGC,QAAA,IAAI,EAAA,IAHL;AAIC,QAAA,KAAK,EAAA;AAJN,OAPL;AAaD;;AACD,WAAO,IAAP;AACD,GArBM;;AAuBC,EAAA,MAAA,CAAA,SAAA,CAAA,eAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,WAAO,KAAK,SAAL,CAAe,YAAA;AAAM,aAAA,KAAI,CAAC,WAAL,CAAiB,KAAI,CAAC,SAAL,EAAjB,CAAA;AAAkC,KAAvD,CAAP;AACD,GAFO;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UACE,KADF,EAEE,IAFF,EAGE,GAHF,EAIE,MAJF,EAIoB;AAElB,QAAM,MAAM,GAAG,OAAO,CAAC,aAAA,CAAA,SAAA,CAAU,IAAX,CAAP,CAAwB,IAAxB,CAAf;AACA,QAAM,GAAG,GAAG,EAAZ;AACA,QAAI,KAAK,GAAG,IAAZ;AACA,SAAK,QAAL,CAAc,KAAd;;AACA,WAAO,CAAC,KAAK,GAAL,EAAR,EAAoB;AAClB,UAAI,MAAM,CAAC,KAAK,IAAL,EAAD,CAAV,EAAyB;AACvB,aAAK,QAAL,CAAc,IAAd;AACA;AACD;;AACD,UAAI,KAAJ,EAAW;AACT,QAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAK,QAAL,CAAc,GAAd;AACD;;AACD,UAAI,MAAM,CAAC,KAAK,IAAL,EAAD,CAAV,EAAyB;AACvB,aAAK,QAAL,CAAc,IAAd;AACA;AACD;;AACD,MAAA,GAAG,CAAC,IAAJ,CAAS,MAAM,EAAf;AACD;;AACD,WAAO,GAAP;AACD,GA3BO;;AA6BD,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAP,YAAA;AACE,QAAM,IAAI,GAAG,EAAb;;AACA,WAAO,CAAC,KAAK,WAAL,CAAiB,GAAjB,EAAR,EAAgC;AAC9B,MAAA,IAAI,CAAC,IAAL,CAAU,KAAK,eAAL,EAAV;;AACA,UAAI,CAAC,KAAK,WAAL,CAAiB,GAAjB,EAAL,EAA6B;AAC3B,aAAK,WAAL;AACD;AACF;;AACD,WAAO;AAAE,MAAA,IAAI,EAAE,OAAO,CAAC,IAAhB;AAAsB,MAAA,IAAI,EAAA;AAA1B,KAAP;AACD,GATM;;AAWC,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAR,UAAkB,IAAlB,EAAmC,GAAnC,EAA8C;AAC5C,QAAM,KAAK,GAAG,KAAK,IAAL,EAAd;AACA,QAAM,cAAc,GAAG,OAAO,CAAC,IAAD,CAAP,CAAc,GAAd,CAAvB;AACA,QAAI,CAAC,cAAc,CAAC,KAAD,CAAnB,EAA4B,KAAK,KAAL,CAAc,GAAG,GAAA,WAAjB;AAC7B,GAJO;;AAkBV,SAAA,MAAA;AAvLA,CAAA,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA;;;;;;ACzEb,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,KAAK,GAAG,wFAAd;;AAMA,IAAM,WAAW,GAAG,SAAd,WAAc,GAAA;AAClB,MAAI;AACF,QAAM,EAAE,GAAG,IAAI,aAAA,CAAA,WAAJ,CAAgB,KAAhB,CAAX;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,IAAN,CAAW,EAAE,CAAC,MAAH,EAAX,CAAf;AACA,WAAO,MAAP;AACD,GAJD,CAIE,OAAO,CAAP,EAAU;AACV,WAAQ,CAAW,CAAC,OAApB;AACD;AACF,CARD;;AASA,IAAM,YAAY,GAAG,SAAf,YAAe,GAAA;AACnB,MAAI;AACF,QAAM,MAAM,GAAG,IAAI,QAAA,CAAA,MAAJ,CAAW,KAAX,CAAf;AACA,WAAO,MAAM,CAAC,aAAP,EAAP;AACD,GAHD,CAGE,OAAO,CAAP,EAAU;AACV,WAAQ,CAAW,CAAC,OAApB;AACD;AACF,CAPD;;AASA,QAAQ,CAAC,cAAT,CAAwB,KAAxB,EAA+B,SAA/B,GAA2C,OACzC,IAAI,CAAC,SAAL,CAAe,YAAY,EAA3B,EAA+B,IAA/B,EAAqC,CAArC,CADyC,GACF,IADzC;;;AC3BA,IAAIA,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBI,IAAtB,CAA2BD,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTE,IAAAA,OAAO,EAAE,UAAUF,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBG,IAAvB,CAA4BD,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIY,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAP,CAAce,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAtB,MAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEApC,QAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO;AACLE,QAAAA,MAAM,CAAC1B,QAAP,CAAgB2B,MAAhB;AACD;AACF;;AAED,QAAIzC,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAAC0B,KAAH;;AACA1B,MAAAA,EAAE,CAAC2B,OAAH,GAAa,YAAY;AACvB7B,QAAAA,QAAQ,CAAC2B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIzC,IAAI,CAACqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACS,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI7C,IAAI,CAACqB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACW,KAAR,CAAc,kBAAkB9C,IAAI,CAAC8C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C/C,IAAI,CAAC8C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAAClD,IAAD,CAAhC;AACAmD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB9D,UAAxB,CAAd;;AACA,MAAIyD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BlD,IAA5B,EAAkC;AAChC,MAAIiD,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAAClB,EAAR,GAAavC,UAAb,CAFgC,CAIhC;;AACA,MAAIuD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoB1D,IAAI,CAAC8C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuB1D,IAAI,CAAC8C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBjE,MAApB,EAA4BoC,EAA5B,EAAgC;AAC9B,MAAI8B,OAAO,GAAGlE,MAAM,CAACkE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKlC,EAAR,IAAemC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,KAAwBrC,EAAjE,EAAsE;AACpE+B,QAAAA,OAAO,CAACxD,IAAR,CAAayD,CAAb;AACD;AACF;AACF;;AAED,MAAIpE,MAAM,CAACe,MAAX,EAAmB;AACjBoD,IAAAA,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAeT,UAAU,CAACjE,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO+B,OAAP;AACD;;AAED,SAASzB,QAAT,CAAkB1C,MAAlB,EAA0B8B,KAA1B,EAAiC;AAC/B,MAAIoC,OAAO,GAAGlE,MAAM,CAACkE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACpC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACpC,MAAM,CAACe,MAAjC,EAAyC;AACvC,QAAIL,EAAE,GAAG,IAAIiE,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C7C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACmC,OAAO,CAACpC,KAAK,CAACM,EAAP,CAAtB;AACA8B,IAAAA,OAAO,CAACpC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC1B,EAAD,EAAKoB,KAAK,CAAC8C,IAAX,CAApB;AACD,GAJD,MAIO,IAAI5E,MAAM,CAACe,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAAC1C,MAAM,CAACe,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBjC,MAAxB,EAAgCoC,EAAhC,EAAoC;AAClC,MAAI8B,OAAO,GAAGlE,MAAM,CAACkE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC9B,EAAD,CAAR,IAAgBpC,MAAM,CAACe,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIyC,MAAM,GAAG7E,MAAM,CAAC8E,KAAP,CAAa1C,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACX,MAAD,EAASoC,EAAT,CAApB;;AAEA,MAAIyC,MAAM,IAAIA,MAAM,CAACzE,GAAjB,IAAwByE,MAAM,CAACzE,GAAP,CAAWG,gBAAX,CAA4BkE,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOR,UAAU,CAAC/B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqC2C,IAArC,CAA0C,UAAU3C,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB5C,MAAtB,EAA8BoC,EAA9B,EAAkC;AAChC,MAAIyC,MAAM,GAAG7E,MAAM,CAAC8E,KAAP,CAAa1C,EAAb,CAAb;AACApC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIuE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACzE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIuE,MAAM,IAAIA,MAAM,CAACzE,GAAjB,IAAwByE,MAAM,CAACzE,GAAP,CAAWI,iBAAX,CAA6BiE,MAAzD,EAAiE;AAC/DI,IAAAA,MAAM,CAACzE,GAAP,CAAWI,iBAAX,CAA6BqB,OAA7B,CAAqC,UAAUmD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAChF,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC8E,KAAP,CAAa1C,EAAb,CAAP;AACApC,EAAAA,MAAM,CAACoC,EAAD,CAAN;AAEAyC,EAAAA,MAAM,GAAG7E,MAAM,CAAC8E,KAAP,CAAa1C,EAAb,CAAT;;AACA,MAAIyC,MAAM,IAAIA,MAAM,CAACzE,GAAjB,IAAwByE,MAAM,CAACzE,GAAP,CAAWG,gBAAX,CAA4BkE,MAAxD,EAAgE;AAC9DI,IAAAA,MAAM,CAACzE,GAAP,CAAWG,gBAAX,CAA4BsB,OAA5B,CAAoC,UAAUmD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["type PeekableIterator<T> = IterableIterator<T> & {\n  peek: () => IteratorResult<T>;\n  eof: () => boolean;\n};\n\nexport class Peekable<T> implements PeekableIterator<T> {\n  private item: IteratorResult<T> | null;\n  constructor(private iterator: IterableIterator<T>) {}\n\n  public peek(): IteratorResult<T> {\n    if (this.item) return this.item;\n    this.item = this.iterator.next();\n    return this.item;\n  }\n\n  public eof(): boolean {\n    const item = this.peek();\n    return item && item.done;\n  }\n\n  public next(): IteratorResult<T> {\n    if (this.item) {\n      const item = this.item;\n      this.item = null;\n      return item;\n    }\n    return this.iterator.next();\n  }\n  public [Symbol.iterator](): IterableIterator<T> {\n    return this;\n  }\n}\n","export class CharStream {\n  private pos: number = 0;\n  private col: number = 0;\n  private line: number = 1;\n  constructor(private input: string) {}\n  public *stream(): IterableIterator<string> {\n    for (let ch of this.input) {\n      if (ch === \"\\n\") {\n        this.col = 0;\n        this.line += 1;\n      } else {\n        this.col += 1;\n      }\n      this.pos += 1;\n      yield ch;\n    }\n  }\n  public peek(): string {\n    return this.input.charAt(this.pos);\n  }\n  error(s: string): never {\n    throw Error(`Error: ${s} at line: ${this.line} col: ${this.col}`);\n  }\n}\n","export enum BinaryOp {\n  Eq = \"==\",\n  NotEq = \"!=\",\n  Plus = \"+\",\n  Minus = \"-\",\n  Mul = \"*\",\n  Div = \"/\",\n  Power = \"^\",\n  GT = \">\",\n  GTE = \">=\",\n  LT = \"<\",\n  LTE = \"<=\"\n}\n\nexport const BINARYOPS = [\n  BinaryOp.Eq,\n  BinaryOp.NotEq,\n  BinaryOp.Plus,\n  BinaryOp.Minus,\n  BinaryOp.Mul,\n  BinaryOp.Div,\n  BinaryOp.Power,\n  BinaryOp.GT,\n  BinaryOp.GTE,\n  BinaryOp.LT,\n  BinaryOp.LTE\n].map(x => x.toString());\n\nexport const OPS = Array.from(new Set(BINARYOPS.join(\"\").split(\"\")));\n","import { CharStream } from \"./charStream\";\nimport { BINARYOPS, OPS } from \"./operator\";\n\nexport enum TokenType {\n  Punc = \"PUNC\",\n  Num = \"NUM\",\n  Str = \"STRING\",\n  Var = \"VAR\",\n  Kw = \"KW\",\n  Op = \"OP\"\n}\n\nconst WHITESPACE = [\" \", \"\\n\", \"\\t\"];\nconst ALPHABET = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\nconst NUMBER = \"1234567890\".split(\"\");\nconst VARSTART = [...ALPHABET, \"_\"];\nconst IDENTIFIER = [...VARSTART, ...NUMBER];\nconst PUNCT = \"{}[]();:,\".split(\"\");\nconst COMMENT = [\"#\"];\nconst KEYWORDS = [\"if\", \"then\", \"else\", \"lambda\", \"true\", \"false\"];\n\nexport type Token = { type: TokenType; value: string | number };\n\nconst includes = (...chars: string[]) => (c: string) => chars.indexOf(c) >= 0;\nconst excludes = (...chars: string[]) => (c: string) => !includes(...chars)(c);\nconst isPunctuation = includes(...PUNCT);\nconst isWhitespace = includes(...WHITESPACE);\nconst isIdentifier = includes(...IDENTIFIER);\nconst isAlphabet = includes(...ALPHABET);\nconst isVarstart = includes(...VARSTART);\nconst isNumber = includes(...NUMBER);\nconst isOperator = includes(...OPS);\nconst isAssign = includes(\"=\");\nconst isBinaryOperator = includes(...BINARYOPS);\nconst isQuote = includes('\"');\nconst isComment = includes(...COMMENT);\nconst isKeword = includes(...KEYWORDS);\n\nexport class TokenStream {\n  private charStream: CharStream;\n  private charIterator: IterableIterator<string>;\n\n  constructor(private input: string) {\n    this.charStream = new CharStream(input);\n    this.charIterator = this.charStream.stream();\n  }\n  private takeWhile(...chars: string[]): string {\n    const isIn = includes(...chars);\n    let str = \"\";\n    while (isIn(this.charStream.peek())) {\n      str += this.charIterator.next().value;\n    }\n    return str;\n  }\n  private takeUntil(...chars: string[]): string {\n    const notIn = excludes(...chars);\n    let str = \"\";\n    while (notIn(this.charStream.peek())) {\n      str += this.charIterator.next().value;\n    }\n    return str;\n  }\n  private skipWhitespace(): void {\n    this.takeWhile(...WHITESPACE);\n  }\n  private skipLineRemainder(): void {\n    this.takeUntil(\"\\n\");\n  }\n  private takeAsString(): string {\n    this.charIterator.next(); //skip quote\n    const str = this.takeUntil('\"', \"\\n\");\n    const q = this.charIterator.next(); //skip quote\n    if (!isQuote(q.value)) this.error(\"Unterminated string\");\n    return str.replace(/\\\"/g, \"\");\n  }\n  private takeAsOperator(): string {\n    const op = this.takeWhile(...OPS);\n    if (!isBinaryOperator(op) && !isAssign(op)) {\n      this.error(`Unknown operator ${op}`);\n    }\n    return op;\n  }\n  private takeAsIdentifier(): string {\n    return this.takeWhile(...IDENTIFIER);\n  }\n  private takeAsNumber(): number {\n    const num = this.takeWhile(...NUMBER);\n    const next = this.charStream.peek();\n    if (isVarstart(next)) {\n      this.error(`Unknown token ${num}${next}..`);\n    }\n    return Number(num);\n  }\n  public error = (s: string) => this.charStream.error(s);\n  public *stream(): IterableIterator<Token> {\n    let char;\n    while ((char = this.charStream.peek())) {\n      if (isComment(char)) {\n        this.skipLineRemainder();\n      } else if (isWhitespace(char)) {\n        this.skipWhitespace();\n      } else if (isPunctuation(char)) {\n        yield { type: TokenType.Punc, value: this.charIterator.next().value };\n      } else if (isNumber(char)) {\n        yield { type: TokenType.Num, value: this.takeAsNumber() };\n      } else if (isQuote(char)) {\n        yield { type: TokenType.Str, value: this.takeAsString() };\n      } else if (isOperator(char)) {\n        yield { type: TokenType.Op, value: this.takeAsOperator() };\n      } else if (isVarstart(char)) {\n        const identifier = this.takeAsIdentifier();\n        if (isKeword(identifier)) {\n          yield { type: TokenType.Kw, value: identifier };\n        } else {\n          yield { type: TokenType.Var, value: identifier };\n        }\n      } else {\n        this.error(`Unknown token ${char}`);\n      }\n    }\n  }\n}\n","import { BinaryOp } from \"./operator\";\nimport { Peekable } from \"./peekable\";\nimport { Token, TokenStream, TokenType } from \"./tokenStream\";\nenum AstNode {\n  Num = \"Num\",\n  Str = \"Str\",\n  Bool = \"Bool\",\n  Var = \"Var\",\n  Lambda = \"Lambda\",\n  Call = \"Call\",\n  If = \"If\",\n  Assign = \"Assign\",\n  Binary = \"Binary\",\n  Prog = \"Prog\"\n}\n\ntype Ast =\n  | AstNum\n  | AstStr\n  | AstBool\n  | AstVar\n  | AstIf\n  | AstLambda\n  | AstCall\n  | AstAssign\n  | AstBinary\n  | AstProg;\ntype AstNum = { type: typeof AstNode.Num; value: number };\ntype AstStr = { type: typeof AstNode.Str; value: string };\ntype AstBool = { type: typeof AstNode.Bool; value: boolean };\ntype AstVar = { type: typeof AstNode.Var; value: string };\ntype AstIf = { type: typeof AstNode.If; cond: Ast; then: Ast; else: Ast };\ntype AstLambda = { type: typeof AstNode.Lambda; vars: AstVar[]; body: Ast[] };\ntype AstCall = { type: typeof AstNode.Call; func: Ast; args: Ast[] };\ntype AstProg = { type: typeof AstNode.Prog; body: Ast[] };\ntype AstBinary = {\n  type: typeof AstNode.Binary;\n  op: BinaryOp;\n  left: Ast;\n  right: Ast;\n};\ntype AstAssign = {\n  type: typeof AstNode.Assign;\n  op: \"=\";\n  left: Ast;\n  right: Ast;\n};\n\ntype ParserFunc = () => Ast;\n\nconst isTokenType = (tokenType: TokenType) => (token: Token) =>\n  tokenType === token.type;\nconst isTokenVal = (value: Token[\"value\"]) => (token: Token) =>\n  value === token.value;\nconst isToken = (tokenType: TokenType) => (value: Token[\"value\"]) => (\n  token: Token\n) => isTokenType(tokenType)(token) && isTokenVal(value)(token);\nconst isOp = isTokenType(TokenType.Op);\nconst isPunc = isTokenType(TokenType.Punc);\nconst isSemicol = isToken(TokenType.Punc)(\";\");\nconst isOpenParen = isToken(TokenType.Punc)(\"(\");\nconst isCloseParen = isToken(TokenType.Punc)(\")\");\nconst isOpenCurly = isToken(TokenType.Punc)(\"{\");\nconst isCloseCurly = isToken(TokenType.Punc)(\"}\");\nconst isVar = isTokenType(TokenType.Var);\nconst isString = isTokenType(TokenType.Str);\nconst isNum = isTokenType(TokenType.Num);\nconst isIf = isToken(TokenType.Kw)(\"if\");\nconst isLambda = isToken(TokenType.Kw)(\"lambda\");\nconst isTrue = isToken(TokenType.Kw)(\"true\");\nconst isFalse = isToken(TokenType.Kw)(\"false\");\nexport const isAssign = isToken(TokenType.Op)(\"=\");\n\nexport class Parser {\n  private rawTokenStream: TokenStream;\n  private tokenStream: Peekable<Token>;\n  constructor(input: string) {\n    this.rawTokenStream = new TokenStream(input);\n    this.tokenStream = new Peekable<Token>(this.rawTokenStream.stream());\n  }\n\n  private parseNum = (value: number): AstNum => ({ type: AstNode.Num, value });\n  private parseStr = (value: string): AstStr => ({ type: AstNode.Str, value });\n  private parseVar = (value: string): AstVar => ({ type: AstNode.Var, value });\n  private parseBool = (value: boolean): AstBool => ({\n    type: AstNode.Bool,\n    value\n  });\n\n  private parseVarName = (): AstVar => {\n    const peek = this.peek();\n    if (isVar(peek)) {\n      const val = this.next().value as string;\n      return this.parseVar(val);\n    }\n    this.error(`${peek.value} is not a variable name`);\n  };\n\n  private parseItem(): Ast {\n    const peek = this.peek();\n    if (isIf(peek)) return this.parseIf();\n    // if (isOpenParen(peek)) return this.parseExpression();\n    if (isOpenCurly(peek)) return this.parseProg();\n    if (isLambda(peek)) return this.parseLambda();\n    const next = this.next();\n    if (isVar(next))\n      return this.maybeCall(() => this.parseVar(next.value as string));\n    if (isFalse(next)) return this.parseBool(false);\n    if (isTrue(next)) return this.parseBool(true);\n    if (isString(next)) return this.parseStr(next.value as string);\n    if (isNum(next)) return this.parseNum(next.value as number);\n    this.error(`Unexpected token \"${next.value}\"`);\n  }\n\n  private parseProg(): Ast | AstProg {\n    const body = this.delimited(\"{\", \"}\", \";\", () => this.parseExpression());\n    if (body.length === 0) {\n      return body[0];\n    }\n    return {\n      type: AstNode.Prog,\n      body\n    };\n  }\n\n  private parseLambda(): AstLambda {\n    this.skipLambda();\n    const vars = this.delimited(\"(\", \")\", \",\", () =>\n      this.parseVarName()\n    ) as AstVar[];\n    this.skipCol();\n    const body = this.delimited(\"{\", \"}\", \";\", () => this.parseExpression());\n    return {\n      type: AstNode.Lambda,\n      vars,\n      body\n    };\n  }\n\n  private parseIf(): AstIf {\n    this.skipIf();\n    const cond = this.parseExpression();\n    this.skipThen();\n    const _then = this.parseProg();\n    this.skipElse();\n    const _else = this.parseProg();\n    return {\n      type: AstNode.If,\n      cond,\n      then: _then,\n      else: _else\n    };\n  }\n\n  private parseCall(func: Ast): Ast {\n    return {\n      type: AstNode.Call,\n      func,\n      args: this.delimited(\"(\", \")\", \",\", () => this.parseExpression())\n    };\n  }\n\n  private maybeCall(func: ParserFunc): Ast {\n    const node = func();\n    const next = this.peek();\n    if (!this.eof() && isOpenParen(next)) {\n      return this.parseCall(node);\n    }\n    return node;\n  }\n\n  public maybeBinary(left: Ast): Ast {\n    const next = this.peek();\n    if (!this.eof() && isOp(next)) {\n      const op = this.next();\n      const assign = isAssign(op);\n      const right = this.maybeBinary(this.parseItem());\n      return assign\n        ? ({\n            type: AstNode.Assign,\n            op: \"=\",\n            left,\n            right\n          } as AstAssign)\n        : ({\n            type: AstNode.Binary,\n            op: op.value,\n            left,\n            right\n          } as AstBinary);\n    }\n    return left;\n  }\n\n  private parseExpression(): Ast {\n    return this.maybeCall(() => this.maybeBinary(this.parseItem()));\n  }\n\n  private delimited(\n    start: string,\n    stop: string,\n    sep: string,\n    parser: ParserFunc\n  ): Ast[] {\n    const isStop = isToken(TokenType.Punc)(stop);\n    const ast = [];\n    let first = true;\n    this.skipPunc(start);\n    while (!this.eof()) {\n      if (isStop(this.peek())) {\n        this.skipPunc(stop);\n        break;\n      }\n      if (first) {\n        first = false;\n      } else {\n        this.skipPunc(sep);\n      }\n      if (isStop(this.peek())) {\n        this.skipPunc(stop);\n        break;\n      }\n      ast.push(parser());\n    }\n    return ast;\n  }\n\n  public parseTopLevel(): AstProg {\n    const body = [];\n    while (!this.tokenStream.eof()) {\n      body.push(this.parseExpression());\n      if (!this.tokenStream.eof()) {\n        this.skipSemicol();\n      }\n    }\n    return { type: AstNode.Prog, body };\n  }\n\n  private skipToken(type: TokenType, val: string) {\n    const token = this.next();\n    const isCorrectToken = isToken(type)(val);\n    if (!isCorrectToken(token)) this.error(`${val} expected`);\n  }\n  private skipKw = (val: string) => this.skipToken(TokenType.Kw, val);\n  private skipIf = () => this.skipKw(\"if\");\n  private skipLambda = () => this.skipKw(\"lambda\");\n  private skipThen = () => this.skipKw(\"then\");\n  private skipElse = () => this.skipKw(\"else\");\n  private skipPunc = (val: string) => this.skipToken(TokenType.Punc, val);\n  private skipSemicol = () => this.skipPunc(\";\");\n  private skipCol = () => this.skipPunc(\":\");\n  private eof = (): boolean => this.tokenStream.eof();\n  private next = (): Token => this.tokenStream.next().value;\n  private peek = (): Token => this.tokenStream.peek().value;\n  private error = (s: string) =>\n    this.rawTokenStream.error(`${s} around \"${this.peek().value}\"`);\n}\n","import { Parser } from \"./parser\";\nimport { TokenStream } from \"./tokenStream\";\n\nconst input = `\n  sum = lambda (a,b): {a+b;};\n  mul = lambda (a,b): {a*b;};\n  sum(mul(2,3),5*2);\n`;\n\nconst tokenResult = () => {\n  try {\n    const ts = new TokenStream(input);\n    const tokens = Array.from(ts.stream());\n    return tokens;\n  } catch (e) {\n    return (e as Error).message;\n  }\n};\nconst parserResult = () => {\n  try {\n    const parser = new Parser(input);\n    return parser.parseTopLevel();\n  } catch (e) {\n    return (e as Error).message;\n  }\n};\n\ndocument.getElementById(\"app\").innerHTML = `\n${JSON.stringify(parserResult(), null, 2)}\n`;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}